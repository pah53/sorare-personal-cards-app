{"ast":null,"code":"var _jsxFileName = \"/Users/peterhiggins/Desktop/sorare-web-app/src/pages/tracks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport TrackCard from '../containers/track-card';\nimport { Layout, QueryResult } from '../components'; // const user = \"pah799\";\n\n/** TRACKS gql query to retreive all tracks */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TRACKS = gql`\n  query Query {\n  user(slug:\"pah799\") {\n    cards {\n      id\n      name\n      rarity\n      pictureUrl\n      player {\n        age\n        status {\n          playingStatus\n          lastFiveSo5AverageScore\n          lastFifteenSo5AverageScore\n        }\n      }\n      userOwnerWithRate{\n        priceInFiat{\n          usd\n        }\n      }\n    }\n  }\n}\n`;\n/**\n * Tracks Page is the Catstronauts home page.\n * We display a grid of tracks fetched with useQuery with the TRACKS query\n */\n\nconst Tracks = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(TRACKS);\n\n  if (data.user.cards.rarity != \"common\") {\n    var _data$user$cards;\n\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      grid: true,\n      children: /*#__PURE__*/_jsxDEV(QueryResult, {\n        error: error,\n        loading: loading,\n        data: data,\n        children: data === null || data === void 0 ? void 0 : (_data$user$cards = data.user.cards) === null || _data$user$cards === void 0 ? void 0 : _data$user$cards.map((track, index) => /*#__PURE__*/_jsxDEV(TrackCard, {\n          track: track\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  ;\n};\n\n_s(Tracks, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Tracks;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"sources":["/Users/peterhiggins/Desktop/sorare-web-app/src/pages/tracks.js"],"names":["React","useQuery","gql","TrackCard","Layout","QueryResult","TRACKS","Tracks","loading","error","data","user","cards","rarity","map","track","index","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,eAApC,C,CAEA;;AAEA;;;AACA,OAAO,MAAMC,MAAM,GAAGJ,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBO;AA0BP;AACA;AACA;AACA;;AACA,MAAMK,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACK,MAAD,CAAzC;;AAEA,MAAII,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgBC,MAAhB,IAA0B,QAA9B,EAAwC;AAAA;;AACtC,wBACE,QAAC,MAAD;AAAQ,MAAA,IAAI,MAAZ;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEJ,KAApB;AAA2B,QAAA,OAAO,EAAED,OAApC;AAA6C,QAAA,IAAI,EAAEE,IAAnD;AAAA,kBACGA,IADH,aACGA,IADH,2CACGA,IAAI,CAAEC,IAAN,CAAWC,KADd,qDACG,iBAAkBE,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,kBACrB,QAAC,SAAD;AAA0B,UAAA,KAAK,EAAED;AAAjC,WAAgBA,KAAK,CAACE,EAAtB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAAA;AACF,CAdD;;GAAMV,M;UAC6BN,Q;;;KAD7BM,M;AAgBN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport TrackCard from '../containers/track-card';\nimport { Layout, QueryResult } from '../components';\n\n// const user = \"pah799\";\n\n/** TRACKS gql query to retreive all tracks */\nexport const TRACKS = gql`\n  query Query {\n  user(slug:\"pah799\") {\n    cards {\n      id\n      name\n      rarity\n      pictureUrl\n      player {\n        age\n        status {\n          playingStatus\n          lastFiveSo5AverageScore\n          lastFifteenSo5AverageScore\n        }\n      }\n      userOwnerWithRate{\n        priceInFiat{\n          usd\n        }\n      }\n    }\n  }\n}\n`;\n\n/**\n * Tracks Page is the Catstronauts home page.\n * We display a grid of tracks fetched with useQuery with the TRACKS query\n */\nconst Tracks = () => {\n  const { loading, error, data } = useQuery(TRACKS);\n\n  if (data.user.cards.rarity != \"common\") {\n    return (\n      <Layout grid>\n        <QueryResult error={error} loading={loading} data={data}>\n          {data?.user.cards?.map((track, index) => (\n            <TrackCard key={track.id} track={track} />\n          ))}\n        </QueryResult>\n      </Layout>\n    );\n  };\n};\n\nexport default Tracks;\n"]},"metadata":{},"sourceType":"module"}